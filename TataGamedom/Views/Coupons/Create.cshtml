@model TataGamedom.Models.ViewModels.Coupons.CouponCreateVM

@{
    ViewBag.Title = "Create";
}
@section Styles{
    <link href="~/Content/layoutStyle1.css" rel="stylesheet" />
    <link href="~/Content/bootstrap theme.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link rel="stylesheet" href="~/Content/YiyierStyle.css">
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.18/dist/sweetalert2.min.css" rel="stylesheet">
}
<div class="container">
    <h1 class="main_heading">新增優惠券</h1>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="mb-3">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control target" } })
                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.DiscountTypeId, htmlAttributes: new { @class = "control-label col-md-1" })
                @foreach (var discountType in Model.DiscountTypeCode)
                {
                    <label class="radio-inline form-check-label">
                        @Html.RadioButtonFor(model => model.DiscountTypeId, discountType.Id, new { id = "discountType_" + discountType.Id })
                        @discountType.Name
                    </label>
                }
                @Html.ValidationMessageFor(model => model.DiscountTypeId, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control target" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.Threshold, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Threshold, new { htmlAttributes = new { @class = "form-control target" } })
                @Html.ValidationMessageFor(model => model.Threshold, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control target"} })
                @*@Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control target", type = "date", min = DateTime.Now.ToString("yyyy-MM-dd") } })*@
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control target", type = "date", min = DateTime.Now.ToString("yyyy-MM-dd") } })
                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
            </div>
            <div>
                <div class="mb-3">
                    <div style="text-align: right;">
                        @Html.ActionLink("返回", "Index", null, new { @class = "btn btn-primary btnColor" })
                        <input type="submit" value="新增" class="btn btn-primary btnColor" />
                    </div>
                </div>
            </div>
        </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
