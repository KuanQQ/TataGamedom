@model TataGamedom.Models.ViewModels.Products.ProductEditVM

@{
    ViewBag.Title = "EditProduct";
}
@section Styles{
    <link href="~/Content/layoutStyle1.css" rel="stylesheet" />
    <link href="~/Content/bootstrap theme.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link rel="stylesheet" href="~/Content/YiyierStyle.css">
}
<div class="container">
    <h1 class="main_heading">編輯商品</h1>
    <div>
        <div>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="row">
                    <hr />
                    <div class="mb-3">
                        @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "form-label col-md-2 visually-hidden" })
                        @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control visually-hidden" } })
                        @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger visually-hidden" })
                    </div>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    <div class="mb-3">
                        @Html.LabelFor(model => model.Index, htmlAttributes: new { @class = "form-label col-md-2" })
                        @Html.EditorFor(model => model.Index, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.Index, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.GameId, htmlAttributes: new { @class = "form-label col-md-2 visually-hidden" })
                        @Html.EditorFor(model => model.GameId, new { htmlAttributes = new { @class = "form-control visually-hidden" } })
                        @Html.ValidationMessageFor(model => model.GameId, "", new { @class = "text-danger visually-hidden" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.GameName, htmlAttributes: new { @class = "form-label col-md-2" })
                        @Html.EditorFor(model => model.GameName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.GameName, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-label col-md-2" })
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>

                    <div class=" d-flex mb-3">
                        @Html.LabelFor(model => model.IsVirtual, htmlAttributes: new { @class = "form-label" })
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsVirtual)
                            @Html.ValidationMessageFor(model => model.IsVirtual, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "form-label col-md-2" })
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control target" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.GamePlatform, htmlAttributes: new { @class = "form-label col-md-2" })
                        @Html.DropDownList("GamePlatform", null, "", htmlAttributes: new { @class = "form-select" })
                        @Html.ValidationMessageFor(model => model.GamePlatform, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(model => model.SystemRequire, htmlAttributes: new { @class = "form-label col-md-2" })
                        @Html.EditorFor(model => model.SystemRequire, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SystemRequire, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.ProductStatus, htmlAttributes: new { @class = "form-label col-md-2" })
                        @Html.DropDownList("ProductStatus", null, "", htmlAttributes: new { @class = "form-select" })
                        @Html.ValidationMessageFor(model => model.ProductStatus, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.SaleDate, htmlAttributes: new { @class = "form-label col-md-2" })
                        @Html.EditorFor(model => model.SaleDate, new { htmlAttributes = new { @class = "form-control target", type = "date" } })
                        @Html.ValidationMessageFor(model => model.SaleDate, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.ModifiedBackendMemberName, htmlAttributes: new { @class = "form-label col-2" })
                        <div>
                            @Html.DisplayFor(model => model.ModifiedBackendMemberName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                        @Html.HiddenFor(model => model.ModifiedBackendMemberName)
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.ModifiedTime, htmlAttributes: new { @class = "form-label col-2" })
                        <div>
                            @Html.DisplayFor(model => model.ModifiedTime, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.ModifiedTime, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        <div style="text-align: right;">
                            @Html.ActionLink("返回", "Index", null, new { @class = "btn btn-primary btnColor" })
                            <input type="submit" value="更新" class="btn btn-primary btnColor" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
