@model TataGamedom.Models.ViewModels.News.NewsEditVM

@{
	ViewBag.Title = "Edit";
}

<h2>編輯新聞</h2>


@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="row">
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="mt-3">
			@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })

			@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })

		</div>

		<div class="mt-3">
			@Html.LabelFor(model => model.NewsCategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
			@Html.DropDownList("NewsCategoryId", null, "", htmlAttributes: new { @class = "form-select", @onchange = "showHideGamesDiv();" })
			@Html.ValidationMessageFor(model => model.NewsCategoryId, "", new { @class = "text-danger" })
		</div>

		<div class="mt-3" id="gamesDiv" style="display: none;">
			@Html.LabelFor(model => model.GamesId, htmlAttributes: new { @class = "control-label col-md-2" })
			@Html.DropDownList("GamesId", null, "", new { @class = "form-select" })
			@Html.ValidationMessageFor(model => model.GamesId, "", new { @class = "text-danger" })
		</div>

		<div class="mt-3">
			@Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
			@Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
			@*@Html.Raw(Model.Content)*@

		</div>

		<div class="mt-3">
			@Html.LabelFor(model => model.DeleteBackendMemberName, htmlAttributes: new { @class = "control-label col-md-2" })
			@Html.EditorFor(model => model.DeleteBackendMemberName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
			@Html.ValidationMessageFor(model => model.DeleteBackendMemberName, "", new { @class = "text-danger" })

		</div>


		<div class="mt-3">
			@Html.LabelFor(model => model.CoverImg, htmlAttributes: new { @class = "control-label col-md-2" })
			<input type="file" name="file1" class="form-control" />
			@*@Html.EditorFor(model => model.CoverImg, new { htmlAttributes = new { @class = "form-control" } })*@
			@Html.ValidationMessageFor(model => model.CoverImg, "", new { @class = "text-danger" })

		</div>

		<div class="mt-3">
			@Html.LabelFor(model => model.ScheduleDate, htmlAttributes: new { @class = "control-label col-md-2" })

			@Html.EditorFor(model => model.ScheduleDate, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.ScheduleDate, "", new { @class = "text-danger" })

		</div>

		<div class="mt-3">
			@Html.LabelFor(model => model.DeleteDatetime, htmlAttributes: new { @class = "control-label col-md-2" })

			@Html.EditorFor(model => model.DeleteDatetime, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
			@Html.ValidationMessageFor(model => model.DeleteDatetime, "", new { @class = "text-danger" })

		</div>

		<div class="mt-3" style="display: none;">
			@Html.LabelFor(model => model.ActiveFlag, htmlAttributes: new { @class = "control-label col-md-2" })

			<div>
				@Html.DropDownListFor(model => model.ActiveFlag, new SelectList(new List<SelectListItem>
				{
					new SelectListItem { Text = "公開", Value = "true" },
					new SelectListItem { Text = "已隱藏", Value = "false" }
				}, "Value", "Text"), "", new { @class = "form-select" })
				@Html.ValidationMessageFor(model => model.ActiveFlag, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="mt-3">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="儲存新聞" class="btn btn-primary" />
				@Html.ActionLink("取消編輯", "Index", null, new { @class = "btn btn-danger" })
				@*@Html.ActionLink("取消編輯", "Index", "News", new { area = "" }, new { @class = "btn btn-danger" })

					@if (Model.ActiveFlag == true)
					{
						@Html.ActionLink("刪除新聞", "Delete", new { id = Model.Id }, new { @class = "btn btn-danger" })
					}
					else if (Model.ActiveFlag == false)
					{
						@Html.ActionLink("公開新聞", "Reduction", new { id = Model.Id }, new { @class = "btn btn-danger" })
					}*@
			</div>
		</div>
	</div>
}
<div class="mb-5">
	<div class="mb-3" style="display: flex; justify-content: flex-end;">
		@if (Model.ActiveFlag)
		{
			using (Html.BeginForm("Delete", "News", new { id = Model.Id }, FormMethod.Post))
			{
				@Html.AntiForgeryToken()
				<span>&nbsp;</span>
				<input type="submit" value="刪除新聞" class="btn btn-danger" />
			}
		}
		else
		{
			using (Html.BeginForm("Reduction", "News", new { id = Model.Id }, FormMethod.Post))
			{
				@Html.AntiForgeryToken()
				<span>&nbsp;</span>
				<input type="submit" value="復原" class="btn btn-success" />
			}
		}
	</div>
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")

	<script>
		tinymce.init({
			selector: 'textarea',
			plugins: '',
			toolbar: 'blocks fontfamily fontsize | bold italic underline strikethrough |  align lineheight | checklist numlist bullist indent outdent |',
			tinycomments_mode: 'embedded',
			tinycomments_author: 'Author name',
			mergetags_list: [
				{ value: 'First.Name', title: 'First Name' },
				{ value: 'Email', title: 'Email' },
			]
		});


		$(document).ready(function () {
			showHideGamesDiv(); // 在網頁載入時觸發函式
		});

		function showHideGamesDiv() {
			var newsCategoryId = $('#NewsCategoryId').val();
			if (newsCategoryId == 1) {
				$('#gamesDiv').show();
			} else {
				$('#gamesDiv').hide();
			}
		}
	</script>
}
@*<script>
		tinymce.init({
			selector: 'textarea',
			plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed linkchecker a11ychecker tinymcespellchecker permanentpen powerpaste advtable advcode editimage tinycomments tableofcontents footnotes mergetags autocorrect typography inlinecss',
			toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
			tinycomments_mode: 'embedded',
			tinycomments_author: 'Author name',
			mergetags_list: [
				{ value: 'First.Name', title: 'First Name' },
				{ value: 'Email', title: 'Email' },
			]
		});
	</script>*@


