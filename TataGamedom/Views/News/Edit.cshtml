@model TataGamedom.Models.ViewModels.News.NewsEditVM

@{
	ViewBag.Title = "Edit";
}

<h2>編輯新聞</h2>
<div class="container">

	@using (Html.BeginForm("Edit", "News", FormMethod.Post, new { enctype = "multipart/form-data" }))
	{
		@Html.AntiForgeryToken()

		<div class="row">
			<hr />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			<div class="mt-3">
				@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })

				@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })

			</div>

			<div class="mt-3">
				@Html.LabelFor(model => model.NewsCategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
				@Html.DropDownList("NewsCategoryId", null, "", htmlAttributes: new { @class = "form-select", @onchange = "showHideGamesDiv();" })
				@Html.ValidationMessageFor(model => model.NewsCategoryId, "", new { @class = "text-danger" })
			</div>

			<div class="mt-3" id="gamesDiv" style="display: none;">
				@Html.LabelFor(model => model.GamesId, htmlAttributes: new { @class = "control-label col-md-2" })
				@Html.DropDownList("GamesId", null, "", new { @class = "form-select" })
				@Html.ValidationMessageFor(model => model.GamesId, "", new { @class = "text-danger" })
			</div>

			<div class="mt-3">
				@Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
				@Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
				@*@Html.Raw(Model.Content)*@

			</div>

			<div class="mt-3">
				@Html.LabelFor(model => model.DeleteBackendMemberName, htmlAttributes: new { @class = "control-label col-md-2" })
				@Html.EditorFor(model => model.DeleteBackendMemberName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
				@Html.ValidationMessageFor(model => model.DeleteBackendMemberName, "", new { @class = "text-danger" })

			</div>

			<div class="mt-3">
				@Html.LabelFor(model => model.CoverImg, htmlAttributes: new { @class = "control-label col-md-2" })
				<input type="file" name="file1" class="form-control" />
				@*@Html.EditorFor(model => model.CoverImg, new { htmlAttributes = new { @class = "form-control" } })*@
				@Html.ValidationMessageFor(model => model.CoverImg, "", new { @class = "text-danger" })

			</div>
			<div class="mb-3 col-6">
				<img src="/Files/NewsImages/@Model.CoverImg" style="width: 100%" />
			</div>

			<div class="mt-3">
				@Html.LabelFor(model => model.ScheduleDate, htmlAttributes: new { @class = "control-label col-md-2" })

				@Html.EditorFor(model => model.ScheduleDate, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.ScheduleDate, "", new { @class = "text-danger" })

			</div>

			<div class="mt-3">
				@Html.LabelFor(model => model.EditDatetime, htmlAttributes: new { @class = "control-label col-md-2" })

				@Html.EditorFor(model => model.EditDatetime, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
				@Html.ValidationMessageFor(model => model.EditDatetime, "", new { @class = "text-danger" })

			</div>

			<div class="mt-3" style="display: none;">
				@Html.LabelFor(model => model.ActiveFlag, htmlAttributes: new { @class = "control-label col-md-2" })

				<div>
					@Html.DropDownListFor(model => model.ActiveFlag, new SelectList(new List<SelectListItem>
					{
						new SelectListItem { Text = "公開", Value = "true" },
						new SelectListItem { Text = "已隱藏", Value = "false" }
					}, "Value", "Text"), "", new { @class = "form-select" })
					@Html.ValidationMessageFor(model => model.ActiveFlag, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="mt-3">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="儲存新聞" class="btn btn-primary" />
					@Html.ActionLink("取消編輯", "Index", null, new { @class = "btn btn-danger" })
					@*@Html.ActionLink("取消編輯", "Index", "News", new { area = "" }, new { @class = "btn btn-danger" })

						@if (Model.ActiveFlag == true)
						{
							@Html.ActionLink("刪除新聞", "Delete", new { id = Model.Id }, new { @class = "btn btn-danger" })
						}
						else if (Model.ActiveFlag == false)
						{
							@Html.ActionLink("公開新聞", "Reduction", new { id = Model.Id }, new { @class = "btn btn-danger" })
						}*@
				</div>
			</div>
		</div>
	}
	<div class="mb-5">
		<div class="mb-3" style="display: flex; justify-content: flex-end;">
			@if (Model.ActiveFlag)
			{
				using (Html.BeginForm("Delete", "News", new { id = Model.Id }, FormMethod.Post))
				{
					@Html.AntiForgeryToken()
					<span>&nbsp;</span>
					<input type="submit" value="刪除新聞" class="btn btn-danger" />
				}
			}
			else
			{
				using (Html.BeginForm("Reduction", "News", new { id = Model.Id }, FormMethod.Post))
				{
					@Html.AntiForgeryToken()
					<span>&nbsp;</span>
					<input type="submit" value="復原" class="btn btn-success" />
				}
			}
		</div>
	</div>
</div>
@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
	@*<script src="~/Scripts/tinymce/tinymce.min.js"></script>*@
	<script src="https://cdn.tiny.cloud/1/6rb3trl2hzooj95cl84vg4l75mca64j5ttuvcm0fu1gumuih/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>

	<script>
		tinymce.init({
			selector: 'textarea',
			plugins: 'image media',
			toolbar: 'blocks fontfamily fontsize | bold italic underline strikethrough | image media align lineheight | checklist numlist bullist indent outdent |',
			language: "zh_TW",
			tinycomments_mode: 'embedded',
			tinycomments_author: 'Author name',
			mergetags_list: [
				{ value: 'First.Name', title: 'First Name' },
				{ value: 'Email', title: 'Email' },
			]
		});
		//tinymce.init({
		//	selector: 'textarea',
		//	plugins: 'image',
		//	toolbar: 'blocks fontfamily fontsize | bold italic underline strikethrough | align lineheight | checklist numlist bullist indent outdent |',
		//	tinycomments_mode: 'embedded',
		//	tinycomments_author: 'Author name',
		//	images_upload_url: "/Files/NewsImages",
		//	language: "zh_TW",
		//	mergetags_list: [
		//		{ value: 'First.Name', title: 'First Name' },
		//		{ value: 'Email', title: 'Email' },
		//	],
		// images_upload_handler: function (blobInfo, success, failure) {
		//	var xhr, formData;

		//	xhr = new XMLHttpRequest();
		//	xhr.withCredentials = false;
		//	xhr.open('POST', '/uploadImage'); // 上傳圖片的後端路由

		//	xhr.onload = function () {
		//		var response = JSON.parse(xhr.responseText);
		//		if (xhr.status !== 200 || !response || response.error) {
		//			failure('圖片上傳失敗');
		//		} else {
		//			success(response.url, { text: response.url }); // 返回圖片在 CDN 上的 URL，並在編輯器中顯示該 URL
		//		}
		//	};

		//	formData = new FormData();
		//	formData.append('file', blobInfo.blob(), blobInfo.filename());

		//	xhr.send(formData);
		//}


		$(document).ready(function () {
			showHideGamesDiv(); // 在網頁載入時觸發函式
		});

		function showHideGamesDiv() {
			var newsCategoryId = $('#NewsCategoryId').val();
			if (newsCategoryId == 1) {
				$('#gamesDiv').show();
			} else {
				$('#gamesDiv').hide();
			}
		}
	</script>
}



